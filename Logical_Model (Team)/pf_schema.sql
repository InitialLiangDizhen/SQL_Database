-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-14 14:14:32 MYT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c


--Group name: 045

set echo on
SPOOL pf_schema_output.txt

DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE drugprescription CASCADE CONSTRAINTS;

DROP TABLE owners CASCADE CONSTRAINTS;

DROP TABLE pet CASCADE CONSTRAINTS;

DROP TABLE pettype CASCADE CONSTRAINTS;

DROP TABLE serviceprovided CASCADE CONSTRAINTS;

DROP TABLE services CASCADE CONSTRAINTS;

DROP TABLE specialisation CASCADE CONSTRAINTS;

DROP TABLE training CASCADE CONSTRAINTS;

DROP TABLE training_vet CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE clinic (
    clinic_id       NUMBER(4) NOT NULL,
    clinic_name     VARCHAR2(15) NOT NULL,
    clinic_addr     VARCHAR2(50) NOT NULL,
    clinic_phone_no NUMBER(10) NOT NULL,
    vet_id          NUMBER(4) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'clinic id';

COMMENT ON COLUMN clinic.clinic_name IS
    'clinic name';

COMMENT ON COLUMN clinic.clinic_addr IS
    'clinic address';

COMMENT ON COLUMN clinic.clinic_phone_no IS
    'clinic phone number';

COMMENT ON COLUMN clinic.vet_id IS
    'vet id';

CREATE UNIQUE INDEX clinic__idx ON
    clinic (
        vet_id
    ASC );

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id            NUMBER(3) NOT NULL,
    drug_name          VARCHAR2(15) NOT NULL,
    drug_usage_instruc VARCHAR2(50) NOT NULL,
    drug_cost          NUMBER(4, 2) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'Drug ID';

COMMENT ON COLUMN drug.drug_name IS
    'Drug Name';

COMMENT ON COLUMN drug.drug_usage_instruc IS
    'Drug Usage Instruction';

COMMENT ON COLUMN drug.drug_cost IS
    'Drug standard cost';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE drugprescription (
    visit_id                      NUMBER(4) NOT NULL,
    drug_id                       NUMBER(3) NOT NULL,
    drug_pres_linecost            NUMBER(4, 2) NOT NULL,
    drug_pres_qty_supplied        NUMBER(2) NOT NULL,
    drug_pres_actual_dose         NUMBER(2) NOT NULL,
    drug_pres_freq_administration NUMBER(2) NOT NULL,
    attribute_11                  NUMBER(4) NOT NULL
);

COMMENT ON COLUMN drugprescription.visit_id IS
    'Visit Id (surrogate PK)';

COMMENT ON COLUMN drugprescription.drug_id IS
    'Drug ID';

COMMENT ON COLUMN drugprescription.drug_pres_linecost IS
    'Drug Prescription Line Cost';

COMMENT ON COLUMN drugprescription.drug_pres_qty_supplied IS
    'Drug Prescription Quantity Supplied';

COMMENT ON COLUMN drugprescription.drug_pres_actual_dose IS
    'Drug actual dose prescribed';

COMMENT ON COLUMN drugprescription.drug_pres_freq_administration IS
    'Drug frequent administration';

COMMENT ON COLUMN drugprescription.attribute_11 IS
    'Visit ID';

ALTER TABLE drugprescription ADD CONSTRAINT drugprescription_pk PRIMARY KEY ( drug_id
,
                                                                              visit_id
                                                                              );

CREATE TABLE owners (
    owner_id       NUMBER(4) NOT NULL,
    owner_giv_name VARCHAR2(10) NOT NULL,
    owner_fam_name VARCHAR2(10) NOT NULL,
    owner_phone_no CHAR(10) NOT NULL
);

COMMENT ON COLUMN owners.owner_id IS
    'Owner id';

COMMENT ON COLUMN owners.owner_giv_name IS
    'Owner given name';

COMMENT ON COLUMN owners.owner_fam_name IS
    'Owner family name';

COMMENT ON COLUMN owners.owner_phone_no IS
    'Owner phone number';

ALTER TABLE owners ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE pet (
    pet_id         NUMBER(4) NOT NULL,
    pet_name       VARCHAR2(50) NOT NULL,
    pet_birth_year DATE NOT NULL,
    pet_alive      CHAR 
/*  WARNING: CHAR size not specified */
     NOT NULL,
    owner_id       NUMBER(4) NOT NULL,
    pet_type_id    NUMBER(4) NOT NULL
);

ALTER TABLE pet
    ADD CONSTRAINT chk_pet_status CHECK ( pet_alive IN ( 'A', 'D' ) );

COMMENT ON COLUMN pet.pet_id IS
    'Pet id';

COMMENT ON COLUMN pet.pet_name IS
    'Pet name';

COMMENT ON COLUMN pet.pet_birth_year IS
    'Pet birth year';

COMMENT ON COLUMN pet.pet_alive IS
    'Status of pet whether alive or deceased';

COMMENT ON COLUMN pet.owner_id IS
    'Owner id';

COMMENT ON COLUMN pet.pet_type_id IS
    'Pet type id';

ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

CREATE TABLE pettype (
    pet_type_id   NUMBER(4) NOT NULL,
    pet_type_name VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN pettype.pet_type_id IS
    'Pet type id';

COMMENT ON COLUMN pettype.pet_type_name IS
    'Pet animal type';

ALTER TABLE pettype ADD CONSTRAINT pettype_pk PRIMARY KEY ( pet_type_id );

CREATE TABLE serviceprovided (
    service_linecost NUMBER(4, 2) NOT NULL,
    visit_id         NUMBER(4) NOT NULL,
    service_code     VARCHAR2(5) NOT NULL,
    attribute_11     NUMBER(4) NOT NULL
);

COMMENT ON COLUMN serviceprovided.service_linecost IS
    'service line cost';

COMMENT ON COLUMN serviceprovided.visit_id IS
    'Visit Id (surrogate PK)';

COMMENT ON COLUMN serviceprovided.service_code IS
    'service code';

COMMENT ON COLUMN serviceprovided.attribute_11 IS
    'Visit ID';

ALTER TABLE serviceprovided ADD CONSTRAINT serviceprescription_pk PRIMARY KEY ( visit_id
,
                                                                                service_code
                                                                                );

CREATE TABLE services (
    service_code VARCHAR2(5) NOT NULL,
    service_desc VARCHAR2(50) NOT NULL,
    service_cost NUMBER(4, 2) NOT NULL
);

COMMENT ON COLUMN services.service_code IS
    'service code';

COMMENT ON COLUMN services.service_desc IS
    'service description';

COMMENT ON COLUMN services.service_cost IS
    'Service standard charge';

ALTER TABLE services ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

CREATE TABLE specialisation (
    spec_id   NUMBER(4) NOT NULL,
    spec_name VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN specialisation.spec_id IS
    'specialisation id';

COMMENT ON COLUMN specialisation.spec_name IS
    'Specialisation name';

ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( spec_id );

CREATE TABLE training (
    train_id       NUMBER(4) NOT NULL,
    train_title    VARCHAR2(15) NOT NULL,
    train_duration NUMBER(2, 1) NOT NULL,
    train_course   VARCHAR2(50),
    train_date     DATE NOT NULL,
    clinic_id      NUMBER(4) NOT NULL,
    vet_id         NUMBER(4) NOT NULL
);

COMMENT ON COLUMN training.train_id IS
    'Train course id';

COMMENT ON COLUMN training.train_title IS
    'Train course title';

COMMENT ON COLUMN training.train_duration IS
    'Train course duration (hrs)';

COMMENT ON COLUMN training.train_course IS
    'train course descption';

COMMENT ON COLUMN training.train_date IS
    'Training date';

COMMENT ON COLUMN training.clinic_id IS
    'clinic id';

COMMENT ON COLUMN training.vet_id IS
    'vet id';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( train_id );

ALTER TABLE training
    ADD CONSTRAINT training_nk UNIQUE ( clinic_id,
                                        vet_id,
                                        train_date );

CREATE TABLE training_vet (
    vet_id                NUMBER(4) NOT NULL,
    train_id              NUMBER(4) NOT NULL,
    train_vet_completed   CHAR(1) NOT NULL,
    train_vet_expiry_date DATE
);

ALTER TABLE training_vet
    ADD CONSTRAINT chk_train_vet_completed CHECK ( train_vet_completed IN ( 'N', 'Y' )
    );

COMMENT ON COLUMN training_vet.vet_id IS
    'vet id';

COMMENT ON COLUMN training_vet.train_id IS
    'Train course id';

COMMENT ON COLUMN training_vet.train_vet_expiry_date IS
    'Traning Vet expiry date';

ALTER TABLE training_vet ADD CONSTRAINT training_vet_pk PRIMARY KEY ( vet_id,
                                                                      train_id );

CREATE TABLE vet (
    vet_id             NUMBER(4) NOT NULL,
    vet_home_clinic_id NUMBER(4) NOT NULL,
    vet_given_name     VARCHAR2(10),
    vet_fam_name       VARCHAR2(10) NOT NULL,
    vet_date_employed  DATE NOT NULL,
    vet_phone_no       CHAR(10) NOT NULL,
    clinic_id          NUMBER(4) NOT NULL,
    spec_id            NUMBER(4) NOT NULL
);

COMMENT ON COLUMN vet.vet_id IS
    'vet id';

COMMENT ON COLUMN vet.vet_given_name IS
    'vet given name';

COMMENT ON COLUMN vet.vet_fam_name IS
    'vet family name';

COMMENT ON COLUMN vet.vet_date_employed IS
    'vet employed date';

COMMENT ON COLUMN vet.vet_phone_no IS
    'vet phone number';

COMMENT ON COLUMN vet.clinic_id IS
    'clinic id';

COMMENT ON COLUMN vet.spec_id IS
    'specialisation id';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE visit (
    attribute_11       NUMBER(4) NOT NULL,
    visit_datetime     DATE NOT NULL,
    vet_id             NUMBER(4) NOT NULL,
    visit_pet_weight   NUMBER(4, 2) NOT NULL,
    visit_length       NUMBER(4, 2) NOT NULL,
    visit_notes        VARCHAR2(50) NOT NULL,
    visit_totalcost    NUMBER(5, 2) NOT NULL,
    visit_payment_type CHAR(1) NOT NULL,
    clinic_id          NUMBER(4) NOT NULL,
    pet_id             NUMBER(4) NOT NULL,
    owner_id           NUMBER(4) NOT NULL,
    visit_attribute_11 NUMBER(4)
);

ALTER TABLE visit
    ADD CONSTRAINT chk_payment_type CHECK ( visit_payment_type IN ( 'C', 'E' ) );

COMMENT ON COLUMN visit.attribute_11 IS
    'Visit ID';

COMMENT ON COLUMN visit.visit_datetime IS
    'Visit Date and Time';

COMMENT ON COLUMN visit.vet_id IS
    'vet id';

COMMENT ON COLUMN visit.visit_pet_weight IS
    'Pet weight during visit';

COMMENT ON COLUMN visit.visit_length IS
    'Visit duration length';

COMMENT ON COLUMN visit.visit_notes IS
    'Notes on the pet''s condition during visit';

COMMENT ON COLUMN visit.visit_totalcost IS
    'Total cost for visit';

COMMENT ON COLUMN visit.visit_payment_type IS
    'Payment type for visit';

COMMENT ON COLUMN visit.clinic_id IS
    'clinic id';

COMMENT ON COLUMN visit.pet_id IS
    'Pet id';

COMMENT ON COLUMN visit.owner_id IS
    'Owner id';

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( attribute_11 );

ALTER TABLE visit ADD CONSTRAINT visit_nk UNIQUE ( vet_id,
                                                   visit_datetime );

ALTER TABLE clinic
    ADD CONSTRAINT clinic_head_vet FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training
    ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE drugprescription
    ADD CONSTRAINT drug_drugpresc FOREIGN KEY ( drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE pet
    ADD CONSTRAINT owner_pet FOREIGN KEY ( owner_id )
        REFERENCES owners ( owner_id );

ALTER TABLE visit
    ADD CONSTRAINT owner_visit FOREIGN KEY ( owner_id )
        REFERENCES owners ( owner_id );

ALTER TABLE pet
    ADD CONSTRAINT pet_pettype FOREIGN KEY ( pet_type_id )
        REFERENCES pettype ( pet_type_id );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_id )
        REFERENCES pet ( pet_id );

ALTER TABLE serviceprovided
    ADD CONSTRAINT service_serviceprovided FOREIGN KEY ( service_code )
        REFERENCES services ( service_code );

ALTER TABLE vet
    ADD CONSTRAINT specialisation_vet FOREIGN KEY ( spec_id )
        REFERENCES specialisation ( spec_id );

ALTER TABLE training_vet
    ADD CONSTRAINT training_training_vet FOREIGN KEY ( train_id )
        REFERENCES training ( train_id );

ALTER TABLE vet
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE training
    ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training_vet
    ADD CONSTRAINT vet_training_vet FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE drugprescription
    ADD CONSTRAINT visit_drugprescription FOREIGN KEY ( attribute_11 )
        REFERENCES visit ( attribute_11 );

ALTER TABLE visit
    ADD CONSTRAINT visit_next_visit FOREIGN KEY ( visit_attribute_11 )
        REFERENCES visit ( attribute_11 );

ALTER TABLE serviceprovided
    ADD CONSTRAINT visit_serviceprovided FOREIGN KEY ( attribute_11 )
        REFERENCES visit ( attribute_11 );

SPOOL off
set echo off



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             1
-- ALTER TABLE                             36
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 1
